;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SecCask configuration file
;
; Available variables in string values:
;   $HOME: Current user home directory
;   $USER: Current user name
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[scheduler]
;;; Default slot number
default_num_slot = 8
;;; Enable compatibility check on caching process (This will enable/disable ALL caching!)
enable_compatibility_check_on_caching = false
;;; Enable compatibility check when a new worker connects the coordinator
enable_compatibility_check_on_new_worker = false
;;; (Debug Option) Disable Phase 3 for worker-component compatibility check
__debug_disable_level3_check = false
;;; (Debug Option) Dry run worker creation command. This allows starting a worker in GDB/valgrind/etc.
__debug_worker_creation_dry_run = false
;;; (Debug Option) Always reuse worker. The system will only have one worker for all tasks.
__debug_singleton_worker = false

[worker]
; Use Gramine (Direct Mode)
; gramine_path = /usr/local/bin/gramine-direct
; gramine_path = /usr/local/lib/x86_64-linux-gnu/gramine/direct/loader /usr/local/lib/x86_64-linux-gnu/gramine/direct/libpal.so init
; gramine_manifest_path = /home/mlcask/sgx/seccask2/gramine_manifest/seccask

;;; Direct run
; gramine_path = PYTHONPATH=$HOME/sgx/seccask2/pysrc:$HOME/scvenv-autolearn/lib/python3.9/site-packages APP_HOME=$HOME/sgx/seccask2
gramine_path = PYTHONHOME=/home/mlcask/sgx/lib/cpython-3.9.13-install PYTHONPATH=/home/mlcask/sgx/seccask2/pysrc:/home/mlcask/scvenv-autolearn/lib/python3.9/site-packages APP_HOME=/home/mlcask/sgx/seccask2
gramine_manifest_path = /home/mlcask/sgx/seccask2/build/bin/seccask
;;; Or
; gramine_path = PYTHONPATH=/nfs/host/sgx/seccask SECCASK_HOME=/nfs/host/sgx/seccask;
; gramine_manifest_path = $HOME/sgx/seccask2/build/bin/seccask

[worker_sgx]
;;; Use Gramine-SGX
gramine_path = /usr/local/bin/gramine-sgx
; gramine_path = /usr/local/lib/x86_64-linux-gnu/gramine/sgx/loader /usr/local/lib/x86_64-linux-gnu/gramine/sgx/libpal.so init
gramine_manifest_path = /home/mlcask/sgx/seccask2/gramine_manifest/seccask

[profiler]
;;; Enable memory profiler for modules
enable_memory_profiler = true
;;; Profiling mode
;;; Available choices: status, statm, resource.getrusage
;;; NOTE: The availability of the mode depends on whether the system call is 
;;;   available (e.g., in LibOS)
memory_profiler_mode = status

[log]
;;; Show configuration when starting
log_config = false
;;; Show CFFI logs (LedgeBase commands)
log_cffi = false
;;; Show filesystem storage logs (Path, action, etc.)
log_filesystem_storage = false
;;; Show Encrytped Storage logs (Path, action, etc.)
log_encfs = false
;;; Show I/O logs (I/O Time for components, etc.)
log_io = false
;;; Concatenate log with GNU time verbose output
log_time = true

[ratls]
;;; Enable RATLS
enable = false
;;; MREnclave
mrenclave = fd7b43eaf57a58451f451568b23873b038265ed3c866abadf9ee719d0bf5526b
;;; MRSigner
mrsigner = da04cd9f9cf18feccffe65ab54f4eafadf9fd9f5dee2d649b601d1e0bca9a4bb

[env]
;;; Path for temporary files
temp_path=/home/mlcask/seccask-temp
;;; Number of threads for async I/O
num_threads=2
;;; 

[coordinator]
;;; Host address !!! CURRENTLY DOES NOT READ BUT USE ANYADDR !!!
host = 127.0.0.1
;;; Port open for worker connections
worker_manager_port = 50201
;;; Port open for WebAPI
webapi_port = 5020

[storage]
;;; Select a storage engine
;;; Available choices: rdbms, forkbase, ledgebase, filesystem
storage_engine = filesystem

[storage_ledgebase]
;;; For LedgeBase, the shared object must be linked into the trusted program.
;;; Specify the base path for LedgeBase binary
base_path = /home/mlcask/sgx/seccask2/extern/ustore_release
;;; Specify the path for chunk storage
storage_path = /home/mlcask/seccask-temp/storage

[storage_filesystem]
;;; Base path for filesystem storage
prefix = /home/mlcask/seccask-temp/storage
;;; Chunk size (in Bytes)
chunk_size = 65536
;;; Generic file name (no need to modify)
generic_file_name = VALUE_TEST

[storage_rdbms]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; To use DBMS, create a database called `seccask`,
;;; and create tables using the following SQL query:

;;; CREATE TABLE blobstore (
;;;     bs_key LONGTEXT,
;;;     bs_branch LONGTEXT,
;;;     bs_hversion CHAR(64),
;;;     bs_blob_value LONGBLOB
;;; );

;;; CREATE TABLE head (
;;;     h_key LONGTEXT,
;;;     h_branch LONGTEXT,
;;;     h_hversion CHAR(64)
;;; );
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Database user name
user = root
;;; Since SSL is mandatory for database connection, indicate certificate and
;;; secure key file paths
ssl_cert_path = /home/mlcask/sgx/edgelessdb/cert.pem
ssl_key_path = /home/mlcask/sgx/edgelessdb/key.pem